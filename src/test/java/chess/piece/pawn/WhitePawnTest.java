package chess.piece.pawn;

import static chess.PositionFixtures.A4;
import static chess.PositionFixtures.B4;
import static chess.piece.PiecesFixtures.KNIGHT_BLACK_B4;
import static chess.piece.pawn.PawnFixtures.PAWN_WHITE_A3;
import static org.assertj.core.api.Assertions.assertThat;

import java.util.Set;
import org.junit.jupiter.api.Test;

class WhitePawnTest {

    /*
    ........
    ........
    ........
    ........
    *.......
    p.......
    ........
    ........
     */
    @Test
    void legalMovePositions_a3() {
        final var movablePositions = PAWN_WHITE_A3.legalMovePositions(Set.of(
                PAWN_WHITE_A3
        ));

        assertThat(movablePositions).containsOnly(A4);
    }

    /*
    ........
    ........
    ........
    ........
    *N......
    p.......
    ........
    ........
     */
    @Test
    void legalMovePositions_a3_opposite() {
        final var movablePositions = PAWN_WHITE_A3.legalMovePositions(Set.of(
                PAWN_WHITE_A3,
                KNIGHT_BLACK_B4
        ));

        assertThat(movablePositions).containsOnly(A4, B4);
    }
}
