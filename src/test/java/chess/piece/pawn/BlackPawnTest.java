package chess.piece.pawn;

import static chess.PositionFixtures.A5;
import static chess.PositionFixtures.B5;
import static chess.piece.PiecesFixtures.KNIGHT_WHITE_B5;
import static chess.piece.pawn.PawnFixtures.PAWN_BLACK_A6;
import static org.assertj.core.api.Assertions.assertThat;

import java.util.Set;
import org.junit.jupiter.api.Test;

class BlackPawnTest {

    /*
    ........
    ........
    P.......
    *.......
    ........
    ........
    ........
    ........
     */
    @Test
    void legalMovePositions_a6() {
        final var movablePositions = PAWN_BLACK_A6.legalMovePositions(Set.of(
                PAWN_BLACK_A6
        ));

        assertThat(movablePositions).containsOnly(A5);
    }

    /*
    ........
    ........
    P.......
    *n......
    ........
    ........
    ........
    ........
     */
    @Test
    void legalMovePositions_a6_opposite() {
        final var movablePositions = PAWN_BLACK_A6.legalMovePositions(Set.of(
                PAWN_BLACK_A6,
                KNIGHT_WHITE_B5
        ));

        assertThat(movablePositions).containsOnly(A5, B5);
    }
}
